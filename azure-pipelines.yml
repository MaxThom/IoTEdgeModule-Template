
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Unit Test module'
  inputs:
    command: 'test'
    projects: '*.Test/*.csproj'
    arguments: '-c $(BuildConfiguration) --collect:"XPlat Code Coverage" -- RunConfiguration.DisableAppDomain=true' #--settings $(System.DefaultWorkingDirectory)/CodeCoverage.runsettings

- task: DotNetCoreCLI@2
  displayName: Install ReportGenerator tool
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . dotnet-reportgenerator-globaltool

- script: ./reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
  displayName: Create reports

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml

- task: AzureIoTEdge@2
  displayName: 'Build module images'
  inputs:
    action: 'Build module images'
    templateFilePath: 'EdgeModule/deployment.template.json'
    defaultPlatform: 'amd64'

- task: AzureIoTEdge@2
  displayName: 'Push module images'
  inputs:
    action: 'Push module images'
    containerregistrytype: 'Generic Container Registry'
    dockerRegistryConnection: 'DockerHub-MaxThom'
    templateFilePath: 'EdgeModule/deployment.template.json'
    defaultPlatform: 'amd64'
    fillRegistryCredential: 'true'

- task: AzureIoTEdge@2
  displayName: 'Generate deployment manifest'
  inputs:
    action: 'Generate deployment manifest'
    templateFilePath: 'EdgeModule/deployment.template.json'
    defaultPlatform: 'amd64'
    deploymentManifestOutputPath: '$(System.DefaultWorkingDirectory)/config/deployment.json'
    validateGeneratedDeploymentManifest: 'true'
    fillRegistryCredential: 'true'

- task: AzureIoTEdge@2
  displayName: 'Deploy to IoT Edge devices'
  inputs:
    action: 'Deploy to IoT Edge devices'
    deploymentFilePath: '$(System.DefaultWorkingDirectory)/config/deployment.json'
    azureSubscription: 'AzureMasterThesis(05bb2fdb-b518-414d-94b2-bfecdcb81b44)'
    iothubname: 'ProjectMir-IotHub'
    deploymentid: '$(System.TeamProject)-devops-deployment'
    priority: '0'
    deviceOption: 'Multiple Devices'
    targetcondition: 'tags.level = ''Edge'''
